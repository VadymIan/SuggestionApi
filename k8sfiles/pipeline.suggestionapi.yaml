trigger:
  branches:
    include:
    - master
  paths:
    include:
    - SuggestionApplication.Api/*
    
resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '6a843756-a51e-4275-80ee-c736c6f98817'
  imageRepository: 'suggestionazureapi'
  containerRegistry: 'suggestionapiacr.azurecr.io'
  dockerfilePath: 'Dockerfile'
  tag: '$(Build.BuildId)'
  deploymentFile: 'k8sfiles/suggestionapi.service.yaml'
  trivyVersion: 0.12.0

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build the container image
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        buildContext: $(Build.SourcesDirectory)/SuggestionApi
        tags: |
          $(tag)
    - script: |
        sudo apt-get install rpm
        wget https://github.com/aquasecurity/trivy/releases/download/v$(trivyVersion)/trivy_$(trivyVersion)_Linux-64bit.deb
        sudo dpkg -i trivy_$(trivyVersion)_Linux-64bit.deb
        trivy -v
      displayName: 'Download and install Trivy'
    - task: CmdLine@2
      displayName: "Run trivy container security scan"
      inputs:
        script: |
            trivy image --exit-code 0 --severity LOW,MEDIUM $(imageRepository):$(tag)
            trivy image --exit-code 1 --severity HIGH,CRITICAL $(imageRepository):$(tag)
    
    - script: |
        sudo docker tag $(imageRepository):$(tag) $(containerRegistry)/$(imageRepository):$(tag)
      displayName: 'Tag container image before push'
    - task: Docker@2
      displayName: Push the image to container registry
      inputs:
        command: push
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.SourcesDirectory)/SuggestionApi
        tags: |
          $(tag)
          
- stage: Deploy
  displayName: Deploy to k8s
  jobs:  
  - job: Deploy
    displayName: Deploy to k8s
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: replacetokens@3
      inputs:
        rootDirectory: '$(Build.SourcesDirectory)/SuggestionApi'
        targetFiles: '$(deploymentFile)'
        encoding: 'auto'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        useLegacyPattern: false
        enableTelemetry: true
    
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'suggestionapi-connectionname'
        namespace: 'default'
        command: 'apply'
        useConfigurationFile: true
        configuration: '$(Build.SourcesDirectory)/SuggestionApi/$(deploymentFile)'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
        azureSubscriptionEndpointForSecrets: 'Azure subscription 1 (b1c72062-b737-484b-8f09-a1be8ff20a1a)'
        azureContainerRegistry: 'suggestionapiacr.azurecr.io'